"""Create Departamentas table with FK; Add asmenskodas to Darbuotojas; add aktyvus to Departamentas

Revision ID: 909131da3919
Revises: f1163a362b1e
Create Date: 2025-05-13 16:44:36.602062

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '909131da3919'
down_revision: Union[str, None] = 'f1163a362b1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departamentai',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pavadinimas', sa.String(length=50), nullable=False),
    sa.Column('aktyvus', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('darbuotojai', 'departamentas_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.create_unique_constraint(None, 'darbuotojai', ['asmenskodas'])
    op.create_foreign_key(None, 'darbuotojai', 'departamentai', ['departamentas_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'darbuotojai', type_='foreignkey')
    op.drop_constraint(None, 'darbuotojai', type_='unique')
    op.alter_column('darbuotojai', 'departamentas_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_table('departamentai')
    # ### end Alembic commands ###
